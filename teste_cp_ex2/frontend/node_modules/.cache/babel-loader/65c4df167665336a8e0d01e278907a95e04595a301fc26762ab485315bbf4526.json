{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      customers: [],\n      currentCustomer: {\n        id: null,\n        name: '',\n        card_id: ''\n      },\n      editingCustomer: false,\n      errorMessage: null\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    async fetchCustomers() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/v1/customers/');\n        this.customers = response.data;\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = 'Erro ao buscar clientes.';\n      }\n    },\n    async saveCustomer() {\n      this.errorMessage = null;\n      try {\n        await axios.post('http://localhost:8000/api/v1/customers/', this.currentCustomer);\n        this.currentCustomer = {\n          id: null,\n          name: '',\n          card_id: ''\n        };\n        this.fetchCustomers();\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao cadastrar cliente.';\n        }\n      }\n    },\n    editCustomer(customer) {\n      this.editingCustomer = true;\n      this.currentCustomer = {\n        ...customer\n      };\n    },\n    async updateCustomer() {\n      this.errorMessage = null;\n      try {\n        await axios.put(`http://localhost:8000/api/v1/customers/${this.currentCustomer.id}/`, this.currentCustomer);\n        this.editingCustomer = false;\n        this.currentCustomer = {\n          id: null,\n          name: '',\n          card_id: ''\n        };\n        this.fetchCustomers();\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao atualizar cliente.';\n        }\n      }\n    },\n    async deleteCustomer(customerId) {\n      this.errorMessage = null;\n      try {\n        await axios.delete(`http://localhost:8000/api/v1/customers/${customerId}/`);\n        this.fetchCustomers();\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = 'Erro ao excluir cliente.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customers","currentCustomer","id","name","card_id","editingCustomer","errorMessage","mounted","fetchCustomers","methods","response","get","error","console","saveCustomer","post","editCustomer","customer","updateCustomer","put","deleteCustomer","customerId","delete"],"sources":["C:\\Users\\Lucas\\Desktop\\teste_cp_ex2\\frontend\\src\\components\\Customer.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1>Clientes</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h2>Cadastrar/Editar Cliente</h2>\r\n        <div class=\"form-group\">\r\n          <label for=\"nameInput\">Nome:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"nameInput\" v-model=\"currentCustomer.name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cardIdInput\">ID do Cartão:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"cardIdInput\" v-model=\"currentCustomer.card_id\" />\r\n        </div>\r\n        <button class=\"btn btn-primary\" @click=\"saveCustomer\" v-if=\"!editingCustomer\">\r\n          Cadastrar\r\n        </button>\r\n        <button class=\"btn btn-success\" @click=\"updateCustomer\" v-else>\r\n          Salvar Alterações\r\n        </button>\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h2>Lista de Clientes</h2>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Nome</th>\r\n              <th>ID do Cartão</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"customer in customers\" :key=\"customer.id\">\r\n              <td>{{ customer.name }}</td>\r\n              <td>{{ customer.card_id }}</td>\r\n              <td>\r\n                <button class=\"btn btn-warning btn-sm mr-2\" @click=\"editCustomer(customer)\">\r\n                  Editar\r\n                </button>\r\n                <button class=\"btn btn-danger btn-sm\" @click=\"deleteCustomer(customer.id)\">\r\n                  Excluir\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      customers: [],\r\n      currentCustomer: {\r\n        id: null,\r\n        name: '',\r\n        card_id: '',\r\n      },\r\n      editingCustomer: false,\r\n      errorMessage: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchCustomers();\r\n  },\r\n  methods: {\r\n    async fetchCustomers() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/v1/customers/');\r\n        this.customers = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao buscar clientes.';\r\n      }\r\n    },\r\n    async saveCustomer() {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.post('http://localhost:8000/api/v1/customers/', this.currentCustomer);\r\n        this.currentCustomer = {\r\n          id: null,\r\n          name: '',\r\n          card_id: '',\r\n        };\r\n        this.fetchCustomers();\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao cadastrar cliente.';\r\n        }\r\n      }\r\n    },\r\n    editCustomer(customer) {\r\n      this.editingCustomer = true;\r\n      this.currentCustomer = { ...customer };\r\n    },\r\n    async updateCustomer() {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.put(\r\n          `http://localhost:8000/api/v1/customers/${this.currentCustomer.id}/`,\r\n          this.currentCustomer,\r\n        );\r\n        this.editingCustomer = false;\r\n        this.currentCustomer = {\r\n          id: null,\r\n          name: '',\r\n          card_id: '',\r\n        };\r\n        this.fetchCustomers();\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao atualizar cliente.';\r\n        }\r\n      }\r\n    },\r\n    async deleteCustomer(customerId) {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.delete(`http://localhost:8000/api/v1/customers/${customerId}/`);\r\n        this.fetchCustomers();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao excluir cliente.';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}