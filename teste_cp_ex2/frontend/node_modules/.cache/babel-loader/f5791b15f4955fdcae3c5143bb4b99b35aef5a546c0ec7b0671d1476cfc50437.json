{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Operação\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Entrada de Veículo\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"plateInput\"\n}, \"Placa:\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cardIdInput\"\n}, \"ID do Cartão:\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 0,\n  class: \"alert alert-danger mt-3\"\n};\nconst _hoisted_11 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Veículos no Pátio\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"table\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Placa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"ID do Cartão\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Entrada\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ações\")])], -1 /* HOISTED */);\nconst _hoisted_15 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ExitConfirmation = _resolveComponent(\"ExitConfirmation\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"plateInput\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.plate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.plate]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"cardIdInput\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.cardId = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cardId]])]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.registerEntry && $options.registerEntry(...args))\n  }, \"Registrar Entrada\"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"table\", _hoisted_13, [_hoisted_14, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedParkMovements, movement => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: movement.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(movement.plate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(movement.card_id || ''), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(new Date(movement.entry_date).toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $options.showExitPopup(movement.id)\n    }, \"Registrar Saída\", 8 /* PROPS */, _hoisted_15)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createVNode(_component_ExitConfirmation, {\n    showExitConfirmation: $data.showExitConfirmation,\n    popupVehicle: $data.popupVehicle,\n    onClose: _cache[3] || (_cache[3] = $event => $data.showExitConfirmation = false)\n  }, null, 8 /* PROPS */, [\"showExitConfirmation\", \"popupVehicle\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","type","id","_cache","$event","$data","plate","_hoisted_8","_hoisted_9","cardId","onClick","args","$options","registerEntry","errorMessage","_hoisted_10","_toDisplayString","_createCommentVNode","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","sortedParkMovements","movement","card_id","Date","entry_date","toLocaleString","showExitPopup","_hoisted_15","_createVNode","_component_ExitConfirmation","showExitConfirmation","popupVehicle","onClose"],"sources":["C:\\Users\\Lucas\\Desktop\\teste_cp_ex2\\frontend\\src\\components\\Operation.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1>Operação</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h2>Entrada de Veículo</h2>\r\n        <div class=\"form-group\">\r\n          <label for=\"plateInput\">Placa:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"plateInput\" v-model=\"plate\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cardIdInput\">ID do Cartão:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"cardIdInput\" v-model=\"cardId\" />\r\n        </div>\r\n        <button class=\"btn btn-primary\" @click=\"registerEntry\">Registrar Entrada</button>\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h2>Veículos no Pátio</h2>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Placa</th>\r\n              <th>ID do Cartão</th>\r\n              <th>Entrada</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"movement in sortedParkMovements\" :key=\"movement.id\">\r\n              <td>{{ movement.plate }}</td>\r\n              <td>{{ movement.card_id || '' }}</td>\r\n              <td>{{ new Date(movement.entry_date).toLocaleString() }}</td>\r\n              <td>\r\n                <button class=\"btn btn-danger btn-sm\" @click=\"showExitPopup(movement.id)\">Registrar Saída</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <ExitConfirmation \r\n      :showExitConfirmation=\"showExitConfirmation\" \r\n      :popupVehicle=\"popupVehicle\" \r\n      @close=\"showExitConfirmation = false\" \r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Vue from 'vue';\r\nimport ExitConfirmation from './ExitConfirmation.vue';\r\n\r\nexport default {\r\n  components: {\r\n    ExitConfirmation\r\n  },\r\n  data() {\r\n    return {\r\n      plate: '',\r\n      cardId: '',\r\n      parkMovements: [],\r\n      errorMessage: null,\r\n      showExitConfirmation: false,\r\n      popupVehicle: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchParkMovements();\r\n  },\r\n  computed: {\r\n    sortedParkMovements() {\r\n      return this.parkMovements.sort((a, b) => new Date(b.entry_date) - new Date(a.entry_date));\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchParkMovements() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/v1/park-movements/');\r\n        this.parkMovements = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao buscar veículos no pátio.';\r\n      }\r\n    },\r\n    async registerEntry() {\r\n      this.errorMessage = null;\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/api/v1/park-movements/', {\r\n          plate: this.plate,\r\n          card_id: this.cardId,\r\n        });\r\n\r\n        // Atualiza a lista de veículos no pátio após o registro da entrada\r\n        this.fetchParkMovements(); \r\n\r\n        this.plate = '';\r\n        this.cardId = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao registrar entrada.';\r\n        }\r\n      }\r\n    },\r\n    async registerExit(movementId) {\r\n      this.errorMessage = null;\r\n      try {\r\n        const response = await axios.patch(`http://localhost:8000/api/v1/park-movements/${movementId}/`, {\r\n          exit_date: new Date().toISOString(),\r\n        });\r\n        this.fetchParkMovements();\r\n        this.amount = response.data.value;\r\n        this.showExitConfirmation = true;\r\n        this.popupVehicle = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao registrar saída.';\r\n        }\r\n      }\r\n    },\r\n    showExitPopup(movementId) {\r\n      const movement = this.sortedParkMovements.find(m => m.id === movementId);\r\n      if (movement) {\r\n        this.popupVehicle = movement;\r\n        this.showExitConfirmation = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}