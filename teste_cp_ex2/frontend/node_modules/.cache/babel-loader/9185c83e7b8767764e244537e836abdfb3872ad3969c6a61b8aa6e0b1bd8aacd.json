{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      contracts: [],\n      currentContract: {\n        id: null,\n        description: '',\n        max_value: 0,\n        rules: []\n      },\n      editingContract: false,\n      errorMessage: null\n    };\n  },\n  mounted() {\n    this.fetchContracts();\n  },\n  methods: {\n    async fetchContracts() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/v1/contracts/');\n        this.contracts = response.data;\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = 'Erro ao buscar contratos.';\n      }\n    },\n    async saveContract() {\n      this.errorMessage = null;\n      try {\n        await axios.post('http://localhost:8000/api/v1/contracts/', this.currentContract);\n        this.currentContract = {\n          id: null,\n          description: '',\n          max_value: 0,\n          rules: []\n        };\n        this.fetchContracts();\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao criar contrato.';\n        }\n      }\n    },\n    editContract(contract) {\n      this.editingContract = true;\n      this.currentContract = {\n        ...contract\n      };\n    },\n    async updateContract() {\n      this.errorMessage = null;\n      try {\n        await axios.put(`http://localhost:8000/api/v1/contracts/${this.currentContract.id}/`, this.currentContract);\n        this.editingContract = false;\n        this.currentContract = {\n          id: null,\n          description: '',\n          max_value: 0,\n          rules: []\n        };\n        this.fetchContracts();\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao atualizar contrato.';\n        }\n      }\n    },\n    async deleteContract(contractId) {\n      this.errorMessage = null;\n      try {\n        await axios.delete(`http://localhost:8000/api/v1/contracts/${contractId}/`);\n        this.fetchContracts();\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = 'Erro ao excluir contrato.';\n      }\n    },\n    addRule() {\n      this.currentContract.rules.push({\n        until: 0,\n        value: 0\n      });\n    },\n    removeRule(index) {\n      this.currentContract.rules.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","contracts","currentContract","id","description","max_value","rules","editingContract","errorMessage","mounted","fetchContracts","methods","response","get","error","console","saveContract","post","editContract","contract","updateContract","put","deleteContract","contractId","delete","addRule","push","until","value","removeRule","index","splice"],"sources":["C:\\Users\\Lucas\\Desktop\\teste_cp_ex2\\frontend\\src\\components\\Contract.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1>Contratos</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h2>Criar/Editar Contrato</h2>\r\n        <div class=\"form-group\">\r\n          <label for=\"descriptionInput\">Descrição:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"descriptionInput\" v-model=\"currentContract.description\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"maxValueInput\">Valor Máximo:</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"maxValueInput\" v-model=\"currentContract.max_value\" />\r\n        </div>\r\n        <h3>Regras</h3>\r\n        <div v-for=\"(rule, index) in currentContract.rules\" :key=\"index\">\r\n          <div class=\"form-group\">\r\n            <label :for=\"`untilInput${index}`\">Até (minutos):</label>\r\n            <input type=\"number\" class=\"form-control\" :id=\"`untilInput${index}`\" v-model=\"rule.until\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label :for=\"`valueInput${index}`\">Valor:</label>\r\n            <input type=\"number\" class=\"form-control\" :id=\"`valueInput${index}`\" v-model=\"rule.value\" />\r\n          </div>\r\n          <button class=\"btn btn-danger btn-sm mb-2\" @click=\"removeRule(index)\">\r\n            Remover Regra\r\n          </button>\r\n        </div>\r\n        <button class=\"btn btn-secondary mb-3\" @click=\"addRule\">Adicionar Regra</button>\r\n        <button class=\"btn btn-primary\" @click=\"saveContract\" v-if=\"!editingContract\">\r\n          Criar\r\n        </button>\r\n        <button class=\"btn btn-success\" @click=\"updateContract\" v-else>\r\n          Salvar Alterações\r\n        </button>\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h2>Lista de Contratos</h2>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Descrição</th>\r\n              <th>Valor Máximo</th>\r\n              <th>Regras</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"contract in contracts\" :key=\"contract.id\">\r\n              <td>{{ contract.description }}</td>\r\n              <td>{{ contract.max_value }}</td>\r\n              <td>\r\n                <ul>\r\n                  <li v-for=\"rule in contract.rules\" :key=\"rule.id\">\r\n                    Até {{ rule.until }} minutos: {{ rule.value }}\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-warning btn-sm mr-2\" @click=\"editContract(contract)\">\r\n                  Editar\r\n                </button>\r\n                <button class=\"btn btn-danger btn-sm\" @click=\"deleteContract(contract.id)\">\r\n                  Excluir\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      contracts: [],\r\n      currentContract: {\r\n        id: null,\r\n        description: '',\r\n        max_value: 0,\r\n        rules: [],\r\n      },\r\n      editingContract: false,\r\n      errorMessage: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchContracts();\r\n  },\r\n  methods: {\r\n    async fetchContracts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/v1/contracts/');\r\n        this.contracts = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao buscar contratos.';\r\n      }\r\n    },\r\n    async saveContract() {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.post('http://localhost:8000/api/v1/contracts/', this.currentContract);\r\n        this.currentContract = {\r\n          id: null,\r\n          description: '',\r\n          max_value: 0,\r\n          rules: [],\r\n        };\r\n        this.fetchContracts();\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao criar contrato.';\r\n        }\r\n      }\r\n    },\r\n    editContract(contract) {\r\n      this.editingContract = true;\r\n      this.currentContract = { ...contract };\r\n    },\r\n    async updateContract() {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.put(\r\n          `http://localhost:8000/api/v1/contracts/${this.currentContract.id}/`,\r\n          this.currentContract,\r\n        );\r\n        this.editingContract = false;\r\n        this.currentContract = {\r\n          id: null,\r\n          description: '',\r\n          max_value: 0,\r\n          rules: [],\r\n        };\r\n        this.fetchContracts();\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao atualizar contrato.';\r\n        }\r\n      }\r\n    },\r\n    async deleteContract(contractId) {\r\n      this.errorMessage = null;\r\n      try {\r\n        await axios.delete(`http://localhost:8000/api/v1/contracts/${contractId}/`);\r\n        this.fetchContracts();\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao excluir contrato.';\r\n      }\r\n    },\r\n    addRule() {\r\n      this.currentContract.rules.push({ until: 0, value: 0 });\r\n    },\r\n    removeRule(index) {\r\n      this.currentContract.rules.splice(index, 1);\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}