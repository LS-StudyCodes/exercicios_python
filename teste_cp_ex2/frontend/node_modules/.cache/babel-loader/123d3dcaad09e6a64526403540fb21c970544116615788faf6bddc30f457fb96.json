{"ast":null,"code":"import axios from 'axios';\nimport Vue from 'vue';\nimport ExitConfirmation from './ExitConfirmation.vue';\nexport default {\n  components: {\n    ExitConfirmation\n  },\n  data() {\n    return {\n      plate: '',\n      cardId: '',\n      parkMovements: [],\n      errorMessage: null,\n      showExitConfirmation: false,\n      popupVehicle: {}\n    };\n  },\n  mounted() {\n    this.fetchParkMovements();\n  },\n  computed: {\n    sortedParkMovements() {\n      return this.parkMovements.sort((a, b) => new Date(b.entry_date) - new Date(a.entry_date));\n    }\n  },\n  methods: {\n    async fetchParkMovements() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/v1/park-movements/');\n        this.parkMovements = response.data;\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = 'Erro ao buscar veículos no pátio.';\n      }\n    },\n    async registerEntry() {\n      this.errorMessage = null;\n      try {\n        const response = await axios.post('http://localhost:8000/api/v1/park-movements/', {\n          plate: this.plate,\n          card_id: this.cardId\n        });\n\n        // Atualiza a lista de veículos no pátio após o registro da entrada\n        this.fetchParkMovements();\n        this.plate = '';\n        this.cardId = '';\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao registrar entrada.';\n        }\n      }\n    },\n    async registerExit(movementId) {\n      this.errorMessage = null;\n      try {\n        const response = await axios.patch(`http://localhost:8000/api/v1/park-movements/${movementId}/`, {\n          exit_date: new Date().toISOString()\n        });\n        this.fetchParkMovements();\n        this.amount = response.data.value;\n        this.showExitConfirmation = true;\n        this.popupVehicle = response.data;\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.data && error.response.data.error) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Erro ao registrar saída.';\n        }\n      }\n    },\n    showExitPopup(movementId) {\n      const movement = this.sortedParkMovements.find(m => m.id === movementId);\n      if (movement) {\n        this.popupVehicle = movement;\n        this.showExitConfirmation = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Vue","ExitConfirmation","components","data","plate","cardId","parkMovements","errorMessage","showExitConfirmation","popupVehicle","mounted","fetchParkMovements","computed","sortedParkMovements","sort","a","b","Date","entry_date","methods","response","get","error","console","registerEntry","post","card_id","registerExit","movementId","patch","exit_date","toISOString","amount","value","showExitPopup","movement","find","m","id"],"sources":["C:\\Users\\Lucas\\Desktop\\teste_cp_ex2\\frontend\\src\\components\\Operation.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1>Operação</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h2>Entrada de Veículo</h2>\r\n        <div class=\"form-group\">\r\n          <label for=\"plateInput\">Placa:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"plateInput\" v-model=\"plate\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"cardIdInput\">ID do Cartão:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"cardIdInput\" v-model=\"cardId\" />\r\n        </div>\r\n        <button class=\"btn btn-primary\" @click=\"registerEntry\">Registrar Entrada</button>\r\n        <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h2>Veículos no Pátio</h2>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Placa</th>\r\n              <th>ID do Cartão</th>\r\n              <th>Entrada</th>\r\n              <th>Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"movement in sortedParkMovements\" :key=\"movement.id\">\r\n              <td>{{ movement.plate }}</td>\r\n              <td>{{ movement.card_id || '' }}</td>\r\n              <td>{{ new Date(movement.entry_date).toLocaleString() }}</td>\r\n              <td>\r\n                <button class=\"btn btn-danger btn-sm\" @click=\"showExitPopup(movement.id)\">Registrar Saída</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <ExitConfirmation \r\n      :showExitConfirmation=\"showExitConfirmation\" \r\n      :popupVehicle=\"popupVehicle\" \r\n      @close=\"showExitConfirmation = false\" \r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Vue from 'vue';\r\nimport ExitConfirmation from './ExitConfirmation.vue';\r\n\r\nexport default {\r\n  components: {\r\n    ExitConfirmation\r\n  },\r\n  data() {\r\n    return {\r\n      plate: '',\r\n      cardId: '',\r\n      parkMovements: [],\r\n      errorMessage: null,\r\n      showExitConfirmation: false,\r\n      popupVehicle: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchParkMovements();\r\n  },\r\n  computed: {\r\n    sortedParkMovements() {\r\n      return this.parkMovements.sort((a, b) => new Date(b.entry_date) - new Date(a.entry_date));\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchParkMovements() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/v1/park-movements/');\r\n        this.parkMovements = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.errorMessage = 'Erro ao buscar veículos no pátio.';\r\n      }\r\n    },\r\n    async registerEntry() {\r\n      this.errorMessage = null;\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/api/v1/park-movements/', {\r\n          plate: this.plate,\r\n          card_id: this.cardId,\r\n        });\r\n\r\n        // Atualiza a lista de veículos no pátio após o registro da entrada\r\n        this.fetchParkMovements(); \r\n\r\n        this.plate = '';\r\n        this.cardId = '';\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao registrar entrada.';\r\n        }\r\n      }\r\n    },\r\n    async registerExit(movementId) {\r\n      this.errorMessage = null;\r\n      try {\r\n        const response = await axios.patch(`http://localhost:8000/api/v1/park-movements/${movementId}/`, {\r\n          exit_date: new Date().toISOString(),\r\n        });\r\n        this.fetchParkMovements();\r\n        this.amount = response.data.value;\r\n        this.showExitConfirmation = true;\r\n        this.popupVehicle = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          this.errorMessage = error.response.data.error;\r\n        } else {\r\n          this.errorMessage = 'Erro ao registrar saída.';\r\n        }\r\n      }\r\n    },\r\n    showExitPopup(movementId) {\r\n      const movement = this.sortedParkMovements.find(m => m.id === movementId);\r\n      if (movement) {\r\n        this.popupVehicle = movement;\r\n        this.showExitConfirmation = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}